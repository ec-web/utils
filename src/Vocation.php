<?php
/**
 * 行业助手类
 *
 * @author Janson
 * @create 2017-07-10
 */
namespace EC\Utils;

class Vocation {
    /*
    |--------------------------------------------------------------------------
    | 行业工具助手
    |--------------------------------------------------------------------------
    |
    | 映射关系：
    |    一级 = floor(二级/100)
    |    其他 = 一级/100
    |
    */

    /**
     * 一级行业：行业分组
     *
     * @var array
     */
    const VOC_GROUPS = [
        11 => 'IT/通信/电子/互联网',
        12 => '金融业',
        13 => '房地产/建筑业',
        14 => '法律',
        15 => '商业服务',
        16 => '医疗/健康',
        17 => '贸易/批发/零售/租赁业',
        18 => '生产/加工/制造',
        19 => '交通/运输/物流/仓储',
        20 => '服务业',
        21 => '体育/休闲/旅游/娱乐',
        22 => '能源/矿产/环保',
        23 => '政府/非盈利机构',
        24 => '媒体',
        25 => '教育',
        26 => '农/林/牧/渔',
        27 => '跨领域经营',
        10 => '其他'
    ];

    /**
     * 二级行业：行业分组子项
     *
     * @var array
     */
    const VOC_ITEMS = [
        //一级=11
        1101 => ['name' => '互联网/电子商务', 'include' => [7]],
        1102 => ['name' => 'IT服务（系统/数据/维护）', 'include' => [23]],
        1103 => ['name' => '计算机硬件', 'include' => [2]],
        1104 => ['name' => '信息技术与服务', 'include' => [11]],
        1105 => ['name' =>'计算机软件', 'include' => [3]],
        1106 => ['name' => '电子技术/半导体/集成电路', 'include' => [8]],
        1107 => ['name' => '网络设备', 'include' => [4]],
        1108 => ['name' => '计算机游戏', 'include' => [6]],
        1109 => ['name' => '空间科技', 'include' => [1]],
        1110 => ['name' => '网络安全', 'include' => [5]],
        1111 => ['name' => '纳米技术', 'include' => [10]],
        1112 => ['name' => '电信/通讯', 'include' => [9, 12]],
        1100 => ['name' => '其他'],

        //一级=12
        1201 => ['name' => '财经服务', 'include' => [54]],
        1202 => ['name' => '基金'],
        1203 => ['name' => '证券', 'include' => [59]],
        1204 => ['name' => '期货'],
        1205 => ['name' => '会计', 'include' => [60]],
        1206 => ['name' => '投资', 'include' => [57, 58]],
        1207 => ['name' => '保险', 'include' => [53]],
        1208 => ['name' => '银行', 'include' => [56]],
        1209 => ['name' => '信托'],
        1210 => ['name' => '担保'],
        1211 => ['name' => '拍卖'],
        1212 => ['name' => '典当'],
        1200 => ['name' => '其他'],

        //一级=13
        1301 => ['name' => '房地产', 'include' => [55]],
        1302 => ['name' => '建筑/建筑建材/建材', 'include' => [84]],
        1303 => ['name' => '工程', 'include' => [83]],
        1304 => ['name' => '家居'],
        1305 => ['name' => '建筑/室内设计', 'include' => [85]],
        1306 => ['name' => '装饰装潢', 'include' => [87]],
        1307 => ['name' => '物业管理'],
        1308 => ['name' => '商业中心'],
        1309 => ['name' => '土木工程', 'include' => [86]],
        1300 => ['name' => '其他'],

        //一级=14
        1401 => ['name' => '法律援助', 'include' => [13]],
        1402 => ['name' => '法律服务', 'include' => [14]],
        1400 => ['name' => '其他'],

        //一级=15
        1501 => ['name' => '专业咨询/服务（财会/法律人力资源等）', 'include' => [18, 25]],
        1502 => ['name' => '管理咨询', 'include' => [15]],
        1503 => ['name' => '招聘/猎头', 'include' => [16]],
        1504 => ['name' => '人力资源', 'include' => [17]],
        1505 => ['name' => '市场推广/广告', 'include' => [19]],
        1506 => ['name' => '市场调研/市场研究', 'include' => [20]],
        1507 => ['name' => '翻译服务', 'include' => [22]],
        1508 => ['name' => '公关', 'include' => [21]],
        1509 => ['name' => '会务/活动服务/展会'],
        1510 => ['name' => '中介服务'],
        1511 => ['name' => '检验/检测/认证'],
        1512 => ['name' => '外包服务', 'include' => [24]],
        1500 => ['name' => '其他'],

        //一级=16
        1601 => ['name' => '生物工程', 'include' => [26]],
        1602 => ['name' => '生物信息', 'include' => [27]],
        1603 => ['name' => '医院/医疗', 'include' => [28]],
        1604 => ['name' => '医药品', 'include' => [29]],
        1605 => ['name' => '医疗设备', 'include' => [30]],
        1606 => ['name' => '兽医', 'include' => [31]],
        1607 => ['name' => '健身', 'include' => [32]],
        1608 => ['name' => '心理健康', 'include' => [33]],
        1609 => ['name' => '中医', 'include' => [34]],
        1600 => ['name' => '其他'],

        //一级=17
        1701 => ['name' => '快速消费品（饮料/烟酒）', 'include' => [72, 77]],
        1702 => ['name' => '食品', 'include' => [74]],
        1703 => ['name' => '化妆品', 'include' => [69]],
        1704 => ['name' => '服装', 'include' => [70]],
        1705 => ['name' => '纺织'],
        1706 => ['name' => '皮革'],
        1707 => ['name' => '家具', 'include' => [78]],
        1708 => ['name' => '数码家电', 'include' => [76]],
        1709 => ['name' => '贸易/进出口', 'include' => [81, 131, 132, 133]],
        1710 => ['name' => '零售/批发', 'include' => [71, 73, 75, 79, 80]],
        1711 => ['name' => '租赁服务'],
        1712 => ['name' => '奢侈品/珠宝', 'include' => [82]],
        1700 => ['name' => '其他'],

        //一级=18
        1801 => ['name' => '工艺美术', 'include' => [88]],
        1802 => ['name' => '礼品/玩具'],
        1803 => ['name' => '收藏品/奢侈品'],
        1804 => ['name' => '飞行航空/宇航', 'include' => [89]],
        1805 => ['name' => '汽车/摩托车', 'include' => [90]],
        1806 => ['name' => '造船', 'include' => [97]],
        1807 => ['name' => '化工', 'include' => [91]],
        1808 => ['name' => '大型设备/机电设备/重工业', 'include' => [92, 93]],
        1809 => ['name' => '铁路', 'include' => [100]],
        1810 => ['name' => '包装/集装箱', 'include' => [102]],
        1811 => ['name' => '造纸/木材', 'include' => [99]],
        1812 => ['name' => '玻璃/陶瓷/混凝土', 'include' => [101]],
        1813 => ['name' => '纺织/皮革', 'include' => [98]],
        1814 => ['name' => '加工制造（原料加工）'],
        1815 => ['name' => '加工制造（模具）'],
        1816 => ['name' => '仪器仪表及工业自动化', 'include' => [103, 104]],
        1817 => ['name' => '航空/航天研究与制造'],
        1818 => ['name' => '水电煤供应', 'include' => [112]],
        1800 => ['name' => '其他'],

        //一级=19
        1901 => ['name' => '交通/运输', 'include' => [122, 124, 125, 126]],
        1902 => ['name' => '物流/快递/仓储', 'include' => [120, 121, 123]],
        1900 => ['name' => '其他'],

        //一级=20
        2001 => ['name' => '医疗/医疗服务护理/美容/保健卫生服务'],
        2002 => ['name' => '酒店/餐饮'],
        2003 => ['name' => '旅游/度假'],
        2004 => ['name' => '信息服务', 'include' => [114]],
        2005 => ['name' => '图书馆及博物馆', 'include' => [115]],
        2006 => ['name' => '保安服务', 'include' => [116]],
        2007 => ['name' => '环保服务', 'include' => [117]],
        2008 => ['name' => '家政服务', 'include' => [118]],
        2009 => ['name' => '宗教协会', 'include' => [119]],
        2000 => ['name' => '其他'],

        //一级=21
        2101 => ['name' => '娱乐业', 'include' => [46]],
        2102 => ['name' => '休闲度假/旅游', 'include' => [47]],
        2103 => ['name' => '餐饮业', 'include' => [48]],
        2104 => ['name' => '住宿业', 'include' => [49]],
        2105 => ['name' => '体育运动', 'include' => [50]],
        2106 => ['name' => '食品/饮料', 'include' => [51]],
        2107 => ['name' => '娱乐设备与服务', 'include' => [52]],
        2100 => ['name' => '其他'],

        //一级=22
        2201 => ['name' => '矿产/采掘/冶炼', 'include' => [94]],
        2202 => ['name' => '能源'],
        2203 => ['name' => '石油', 'include' => [95]],
        2204 => ['name' => '石化'],
        2205 => ['name' => '化工'],
        2206 => ['name' => '电气'],
        2207 => ['name' => '电力'],
        2208 => ['name' => '水利'],
        2209 => ['name' => '环保', 'include' => [96]],
        2200 => ['name' => '其他'],

        //一级=23
        2301 => ['name' => '政府机关', 'include' => [105, 106, 107, 108]],
        2302 => ['name' => '公共事业（社会福利/社会保障等）', 'include' => [109, 110]],
        2303 => ['name' => '地质勘查/勘探', 'include' => [111]],
        2304 => ['name' => '公共安全', 'include' => [113]],
        2305 => ['name' => '公益基金', 'include' => [62]],
        2306 => ['name' => '智囊团', 'include' => [63]],
        2307 => ['name' => '非盈利机构', 'include' => [61]],
        2308 => ['name' => '学术/科研'],
        2309 => ['name' => '慈善', 'include' => [64]],
        2300 => ['name' => '其他'],

        //一级=24
        2401 => ['name' => '广播', 'include' => [35]],
        2402 => ['name' => '电视', 'include' => [36]],
        2403 => ['name' => '电影', 'include' => [37]],
        2404 => ['name' => '报纸', 'include' => [38]],
        2405 => ['name' => '杂志', 'include' => [39]],
        2406 => ['name' => '出版', 'include' => [40]],
        2407 => ['name' => '写作/编辑', 'include' => [41]],
        2408 => ['name' => '文化艺术', 'include' => [42]],
        2409 => ['name' => '印刷', 'include' => [43]],
        2410 => ['name' => '互联网媒体', 'include' => [44]],
        2411 => ['name' => '媒体设计制作', 'include' => [45]],
        2400 => ['name' => '其他'],

        //一级=25
        2501 => ['name' => '义务教育', 'include' => [65]],
        2502 => ['name' => '高等教育', 'include' => [66]],
        2503 => ['name' => '教育管理', 'include' => [67]],
        2504 => ['name' => '教育研究', 'include' => [68]],
        2500 => ['name' => '其他'],

        //一级=26
        2601 => ['name' => '农业', 'include' => [129]],
        2602 => ['name' => '林业', 'include' => [128]],
        2603 => ['name' => '牧业', 'include' => [130]],
        2604 => ['name' => '渔业', 'include' => [127]],
        2600 => ['name' => '其他'],

        //一级=27
        2700 => ['name' => '其他'],

        //一级=10
        1000 => ['name' => '其他', 'include' => [134]]
    ];

    /**
     * 旧项映射
     *
     * @var array
     */
    const OLD_MAPS = [
        1 => 1109, 2 => 1103, 3 => 1105, 4 => 1107, 5 => 1110, 6 => 1108, 7 => 1101, 8 => 1106, 9 => 1112, 10 => 1111,
        11 => 1104, 12 => 1112, 13 => 1401, 14 => 1402, 15 => 1502, 16 => 1503, 17 => 1504, 18 => 1501, 19 => 1505, 20 => 1506,
        21 => 1508, 22 => 1507, 23 => 1102, 24 => 1512, 25 => 1501, 26 => 1601, 27 => 1602, 28 => 1603, 29 => 1604, 30 => 1605,
        31 => 1606, 32 => 1607, 33 => 1608, 34 => 1609, 35 => 2401, 36 => 2402, 37 => 2403, 38 => 2404, 39 => 2405, 40 => 2406,
        41 => 2407, 42 => 2408, 43 => 2409, 44 => 2410, 45 => 2411, 46 => 2101, 47 => 2102, 48 => 2103, 49 => 2104, 50 => 2105,
        51 => 2106, 52 => 2107, 53 => 1207, 54 => 1201, 55 => 1301, 56 => 1208, 57 => 1206, 58 => 1206, 59 => 1203, 60 => 1205,
        61 => 2307, 62 => 2305, 63 => 2306, 64 => 2309, 65 => 2501, 66 => 2502, 67 => 2503, 68 => 2504, 69 => 1703, 70 => 1704,
        71 => 1710, 72 => 1701, 73 => 1710, 74 => 1702, 75 => 1710, 76 => 1708, 77 => 1701, 78 => 1707, 79 => 1710, 80 => 1710,
        81 => 1709, 82 => 1712, 83 => 1303, 84 => 1302, 85 => 1305, 86 => 1309, 87 => 1306, 88 => 1801, 89 => 1804, 90 => 1805,
        91 => 1807, 92 => 1808, 93 => 1808, 94 => 2201, 95 => 2203, 96 => 2209, 97 => 1806, 98 => 1813, 99 => 1811, 100 => 1809,
        101 => 1812, 102 => 1810, 103 => 1816, 104 => 1816, 105 => 2301, 106 => 2301, 107 => 2301, 108 => 2301, 109 => 2302, 110 => 2302,
        111 => 2303, 112 => 1818, 113 => 2304, 114 => 2004, 115 => 2005, 116 => 2006, 117 => 2007, 118 => 2008, 119 => 2009, 120 => 1902,
        121 => 1902, 122 => 1901, 123 => 1902, 124 => 1901, 125 => 1901, 126 => 1901, 127 => 2604, 128 => 2602, 129 => 2601, 130 => 2603,
        131 => 1709, 132 => 1709, 133 => 1709, 134 => 1000
    ];

    /**
     * 根据ID获取分组ID
     *
     * @param int $id
     * @return int
     */
    public static function getParentId($id) {
        $id = self::convert($id);

        return intval($id/100);
    }

    /**
     * 根据ID获取分组信息
     *
     * @param int $id
     * @return array ['id' => xx, 'name' => xxxx]
     */
    public static function getParentInfo($id) {
        $parentId = self::getParentId($id);

        $info = isset(self::VOC_GROUPS[$parentId]) ?
            ['id' => $parentId, 'name' => self::VOC_GROUPS[$parentId]] : [];

        return $info;
    }

    /**
     * 获取行业名
     *
     * @param int $id
     * @return string
     */
    public static function getName($id) {
        $id = self::convert($id);
        $name = isset(self::VOC_ITEMS[$id]['name']) ? self::VOC_ITEMS[$id]['name'] : '';

        return $name;
    }

    /**
     * 获取包含的旧项
     *
     * @param int $id
     * @param bool $withSelf 是否包含自身
     * @return array
     */
    public static function getInclude($id, $withSelf = true) {
        $include = isset(self::VOC_ITEMS[$id]['include']) ? self::VOC_ITEMS[$id]['include'] : [];

        if ($withSelf) {
            array_push($include, $id);
        }

        return $include;
    }

    /**
     * 转换新项
     *
     * @param int $id
     * @return int
     */
    public static function convert($id) {
        if (isset(self::OLD_MAPS[$id])) {
            $id = self::OLD_MAPS[$id];
        }

        return $id;
    }
}
